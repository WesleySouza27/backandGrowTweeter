// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id           String     @id @default(uuid()) @db.Uuid
  nome         String     @db.VarChar(100)
  email        String     @unique @db.VarChar(100)
  senha        String
  criadoEm     DateTime   @default(now()) @map("criado_em")
  atualizadoEm DateTime   @updatedAt @map("atualizado_em")
  avatar       String?
  likes        Like[]
  following    Follower[] @relation("Following")
  followers    Follower[] @relation("Followers")
  tweets       Tweet[]

  @@map("usuarios")
}

model Tweet {
  id           String    @id @default(uuid()) @db.Uuid
  descricao    String
  tipo         TipoTweet @default(tweet)
  usuarioId    String    @map("usuario_id") @db.Uuid
  criadoEm     DateTime  @default(now()) @map("criado_em")
  atualizadoEm DateTime  @updatedAt @map("atualizado_em")
  parentId     String?   @map("parent_id") @db.Uuid
  likes        Like[]
  parent       Tweet?    @relation("TweetReplies", fields: [parentId], references: [id])
  replies      Tweet[]   @relation("TweetReplies")
  usuario      Usuario   @relation(fields: [usuarioId], references: [id])

  @@map("tweets")
}

model Like {
  id        String  @id @default(uuid()) @db.Uuid
  usuarioId String  @map("usuario_id") @db.Uuid
  tweetId   String  @map("tweet_id") @db.Uuid
  tweet     Tweet   @relation(fields: [tweetId], references: [id])
  usuario   Usuario @relation(fields: [usuarioId], references: [id])

  @@unique([usuarioId, tweetId])
  @@map("likes")
}

model Follower {
  id          String  @id @default(uuid()) @db.Uuid
  followerId  String  @map("seguidor_id") @db.Uuid
  followingId String  @map("seguindo_id") @db.Uuid
  follower    Usuario @relation("Following", fields: [followerId], references: [id])
  following   Usuario @relation("Followers", fields: [followingId], references: [id])

  @@unique([followerId, followingId])
  @@map("seguidores")
}

enum TipoTweet {
  tweet
  reply
}
